<project name="Facelets" default="all" basedir=".">
                                                                                
  <!-- =================== Environmental Properties ======================= -->
                                                                                
  <!-- Load user property definition overrides -->
  <property environment="env"/>
  <property file="user.properties" />
  <property file="build.properties"/>
  <property file="${user.home}/build.properties"/>
                                                                                
  <!-- Establish property definition defaults -->
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>
  <property name="compile.source"      value="1.4"/>
  <property name="compile.target"      value="1.4"/>
  <property name="build"               value="build"/>
  <property name="dist"                value="dist"/>
  <property name="lib"                 value="lib"/>
  <property name="release"             value="release"/>
  <property name="doc"                 value="doc"/>
  <property name="dependencies"        value="dependencies"/>
  <property name="jsf-api.jar"         value="${basedir}/../javaserverfaces-sources/jsf-api/build/lib/jsf-api.jar" />
  <property name="jar"                 value="jsf-facelets.jar"/>


  <path id="compile.classpath">
    <pathelement location="${build.home}/classes"/>
    <fileset dir="lib" includes="*.jar"/>
    <pathelement location="${jsf-api.jar}"/>
    <pathelement location="${servlet-api.jar}" />
  </path>


  <!-- ===================== Prepare Directories ========================= -->
  <target name="prepare">
                                                                                
    <!-- "Build" Hierarchy -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/classes"/>
    <mkdir dir="${build}/docs"/>
    <mkdir dir="${build}/docs/api"/>
    <mkdir dir="${build}/docs/dev"/>

    <!-- "Dist" Hierarchy -->
    <mkdir dir="${dist}"/>
    <mkdir dir="${dist}/docs"/>
    <mkdir dir="${dist}/docs/api"/>
    <mkdir dir="${dist}/docs/dev"/>
    <mkdir dir="${dist}/src"/>
    <mkdir dir="${dist}/demo"/>
	
    <!-- CVS Dependencies -->
    <mkdir dir="${dependencies}"/>
    <mkdir dir="${lib}"/>

    <uptodate property="docs.uptodate" targetfile="${build}/docs/api/index.html">
      <srcfiles dir="src" includes="**/*.java" />
    </uptodate>
  </target>
  
  <!-- ========================= Macros ================================= -->
  <macrodef name="compile">
    <attribute name="src"/>
	<attribute name="dest"/>
	<sequential>
      <javac srcdir="@{src}"
            destdir="@{dest}"
              debug="${compile.debug}"
        deprecation="${compile.deprecation}"
           optimize="${compile.optimize}"
             source="${compile.source}"
             target="${compile.target}">
        <classpath refid="compile.classpath"/>
      </javac>
	</sequential>
  </macrodef>
  
  <macrodef name="makewar">
    <attribute name="root"/>
    <attribute name="destfile"/>
    <element name="morefiles" optional="true"/>
    <sequential>
	  <antcall target="dist"/>
      <dirname property="@{destfile}.parent" file="@{destfile}"/>
      <mkdir dir="${@{destfile}.parent}"/>
	  <mkdir dir="build/@{root}/build"/>
	  <compile src="@{root}/src" dest="build/@{root}/build"/>
      <war destfile="@{destfile}"
           webxml="@{root}/web/WEB-INF/web.xml">
		<fileset dir="@{root}/web/">
		  <exclude name="@{root}/web/WEB-INF/web.xml"/>
		</fileset>
        <lib dir="${lib}">
          <exclude name="servlet-api.jar"/>
          <exclude name="j2ee.jar"/>
        </lib>
		<classes dir="build/@{root}/build"/>
        <lib file="${dist}/${jar}"/>
      </war>
    </sequential>
  </macrodef>

  <!-- ======================= Static Files ============================== -->
  <target name="static" depends="prepare">
                                                                                
    <!-- "Dist" Hierarchy -->
    <copy todir="${dist}">
      <fileset dir="." includes="BUILDING.txt"/>
      <fileset dir="." includes="LICENSE"/>
      <fileset dir="." includes="README.txt"/>
    </copy>
  </target>


  <!-- ======================== Compile Classes ========================== -->
  <target name="compile" depends="static"
   description="Compile API classes (Default)">
                                                                                
    <!-- Java classes -->
    <compile src="src/java" dest="${build}/classes"/>

    <copy todir="${build}/classes">
      <fileset dir="src/etc">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <include name="**/*.dtd"/>
	    <include name="**/*.ent"/>
      </fileset>
    </copy>

  </target>


  <!-- ======================== Build JavaDoc =========================== -->
  <target name="javadoc" depends="prepare" unless="docs.uptodate">
   
    <javadoc
             windowtitle="JavaServer Faces Facelets"
             destdir="${build}/docs/api"
             sourcepath="src/java"
             doctitle="Facelets API Documentation"
             bottom="Copyright &amp;copy; 2005 All Rights Reserved." packagenames="com.sun.facelets.*"
             use="true">
       <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
       <link href="http://java.sun.com/j2ee/javaserverfaces/1.1_01/docs/api/"/>
       <classpath refid="compile.classpath"/>
    </javadoc>

  </target>
  
  <!-- ======================== Build DocBook =========================== -->
  <target name="doc" depends="prepare">
    <delete dir="${build}/docs/dev"/>
    <xslt basedir="${doc}/en"
           destdir="${build}/docs/dev"
           style="${doc}/../../shared/xhtml.xsl"
           includes="*.xml"
           force="true"/>
    <copy todir="${build}/docs/dev">
		<fileset dir="${doc}/en/rsc"/>
	</copy>
  </target>

  <!-- ===================== Distribution Files ========================= -->
  <target name="jar" depends="compile"
          description="Create jar">
                                                                                
    <!-- Create JAR file -->
    <jar jarfile="${dist}/${jar}"
         basedir="${build}/classes">
      <manifest>
        <attribute name="Implementation-Version" value="${release.version}"/>
      </manifest>
    </jar>
  </target>
 
  <target name="dist" depends="prepare,dependencies,compile,javadoc,jar"
   description="Create binary distribution">
                                                                                
    <!-- Copy Javadocs -->
    <copy todir="${dist}/docs/">
        <fileset dir="${build}/docs/"/>
    </copy>
                                                                                
    <!-- Copy API source files -->
    <copy todir="${dist}/src">
        <fileset dir="src"/>
    </copy>

    <!-- Copy Demo source files -->
    <copy todir="${dist}/demo">
        <fileset dir="demo"/>
    </copy>
         
  </target>

  <!-- ========================= Create Release ========================= -->
  <target name="release" depends="clean, dependencies, doc, dist">
    <mkdir dir="${release}/facelets-${release.version}"/>
	<ant target="-build-demo" antfile="demo/numberguess/build.xml"/>
	<ant target="-build-demo" antfile="demo/hangman/build.xml"/>
	<ant target="-build-demo" antfile="demo/starterkit/build.xml"/>
    <copy todir="${release}/facelets-${release.version}" includeEmptyDirs="false">
       <fileset dir="${dist}"/>
    </copy>
    <mkdir dir="${release}/facelets-${release.version}/lib"/>
	<copy todir="${release}/facelets-${release.version}/lib">
      <fileset dir="${lib}">
        <exclude name="servlet-api.jar"/>
		<exclude name="j2ee.jar"/>
      </fileset>
    </copy>
    <copy file="README.TXT" todir="${release}/facelets-${release.version}"/>
	<copy file="LICENSE.TXT" todir="${release}/facelets-${release.version}"/>
    <!-- <copy file="build.sample.properties" todir="${release}/facelets-${release.version}"/>
    <copy file="build.xml" todir="${release}/facelets-${release.version}"/> -->
    <zip destfile="facelets-${release.version}.zip" basedir="${release}" />
  </target>


  <!-- ====================== Clean Generated Files ===================== -->
  <target name="clean"
   description="Clean previous build results">
    <delete dir="${dependencies}"/>                                                                   
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${release}"/>
    <delete file="${jar}"/>
  </target>
 

  <!-- ========================= All In One Build ======================= -->
  <target name="all" depends="dist"
   description="Clean, dependencies, compile, and dist"/>
   
   
  <!-- =========================== Dependencies ========================= -->
  <target name="dependencies" depends="prepare">
     <condition property="missing.el-api" >
       <not>
          <available file="${lib}/el-api.jar"/>
       </not>
     </condition>
     <condition property="missing.el-ri" >
       <not>
          <available file="${lib}/el-ri.jar"/>
       </not>
     </condition>
     <ant target="-auto-depend-el-api" />
     <ant target="-auto-depend-el-ri" />
  </target>

  <target name="-auto-depend-el-api" if="missing.el-api">
    <ant target="depend-el-api" />
  </target>

  <target name="-auto-depend-el-ri" if="missing.el-ri">
    <ant target="depend-el-ri" />
  </target>
  
  <target name="depend-el-api">
  	<cvs cvsRoot=":pserver:${java.net.cvs.user}@cvs.dev.java.net:/cvs"
	     package="glassfish/servlet-api/src/jsr245/src/share/javax/el"
         dest="${dependencies}" />
    <mkdir dir="${build}/dependencies/el-api" />
	<javac srcdir="${dependencies}/glassfish/servlet-api/src/jsr245/src/share"
          destdir="${build}/dependencies/el-api"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}">
      <classpath refid="compile.classpath"/>
    </javac>
	<copy todir="${build}/dependencies/el-api">
      <fileset dir="${dependencies}/glassfish/servlet-api/src/jsr245/src/share">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <include name="**/*.dtd"/>
	    <include name="**/*.ent"/>
      </fileset>
    </copy>
	<jar jarfile="${lib}/el-api.jar"
         basedir="${build}/dependencies/el-api" />
  </target>
  
  <target name="depend-el-ri">
  	<cvs cvsRoot=":pserver:${java.net.cvs.user}@cvs.dev.java.net:/cvs"
	     package="glassfish/appserv-webtier/src/java/com/sun/el"
         dest="${dependencies}" />
	<mkdir dir="${build}/dependencies/el-ri" />
	<javac srcdir="${dependencies}/glassfish/appserv-webtier/src/java"
          destdir="${build}/dependencies/el-ri"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         optimize="${compile.optimize}"
           source="${compile.source}"
           target="${compile.target}">
      <classpath refid="compile.classpath"/>
    </javac>
	<copy todir="${build}/dependencies/el-ri">
      <fileset dir="${dependencies}/glassfish/appserv-webtier/src/java">
        <include name="**/*.properties"/>
        <include name="**/*.xml"/>
        <include name="**/*.dtd"/>
	    <include name="**/*.ent"/>
      </fileset>
    </copy>
	<jar jarfile="${lib}/el-ri.jar"
         basedir="${build}/dependencies/el-ri" />
  </target>
 
</project>


 
